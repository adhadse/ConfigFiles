/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * Whether to show documentation box next to the completion suggestions.
 */
export declare type ShowDocumentationBox = boolean;
/**
 * Whether to enable continuous hinting (Hinterland mode).
 */
export declare type ContinuousHinting = boolean;
/**
 * An array of CodeMirror tokens for which the continuous hinting should be suppressed. The token names vary between languages (modes).
 */
export declare type SuppressInvokeContinuousHintingInSpecificCodeFragments = string[];
/**
 * An array of CodeMirror tokens for which the auto-invoke after entering a trigger (e.g. `.` in Python or `::` in R) character should be suppressed. The token names vary between languages (modes).
 */
export declare type SuppressInvokeViaTriggerCharacterInSpecificCodeFragments = string[];
/**
 * The time to wait for the kernel completions suggestions in milliseconds. Set to 0 to disable kernel completions, or to -1 to wait indefinitely (not recommended).
 */
export declare type KernelCompletionResponseTimeout = number;
/**
 * The sources from which to exclude completion from. Possible values include 'Kernel', 'LSP'.
 */
export declare type DisableCompletionsBySource = ('Kernel' | 'LSP')[];
/**
 * Should an attempt to get the kernel response (with timeout as specified by kernelResponseTimeout) be made if kernel is busy? If you often write code in notebook while computations are running for long time (e.g. training models), turning this off might give you faster response times.
 */
export declare type WaitForKernelIfBusy = boolean;
/**
 * The identifier of a completer theme with icons which indicate the kind of completion. Set to null to disable icons. Search for 'completer themes' in the command palette for a command displaying available themes.
 */
export declare type CompleterTheme2 = CompleterTheme | CompleterTheme1;
/**
 * The identifier of a completer theme with icons which indicate the kind of completion. Set to null to disable icons. Search for 'completer themes' in the command palette for a command displaying available themes.
 */
export declare type CompleterTheme = string;
/**
 * The identifier of a completer theme with icons which indicate the kind of completion. Set to null to disable icons. Search for 'completer themes' in the command palette for a command displaying available themes.
 */
export declare type CompleterTheme1 = null;
/**
 * In case of ties when sorting completions, should the kernel completions receive higher priority than the language server completions?
 */
export declare type PrioritizeCompletionsFromKernel = boolean;
/**
 * Should completion filtering be case-sensitive?
 */
export declare type CaseSensitiveFiltering = boolean;
/**
 * Should perfect matches be included in the completion suggestions list?
 */
export declare type IncludePerfectMatches = boolean;
/**
 * Should matches be pre-filtered to ensure typed token is a prefix of the match?
 */
export declare type PreFilterMatches = boolean;
/**
 * What to display next to the completion label, one of: 'detail', 'type', 'source', 'auto'. The default 'auto' will display whichever information is available.
 */
export declare type TextToDisplayNextToCompletionLabel = 'detail' | 'type' | 'source' | 'auto';
/**
 * Layout of the completer, one of: 'detail-below', 'side-by-side'
 */
export declare type CompleterLayout = 'detail-below' | 'side-by-side';
/**
 * Disable this feature. Requires reloading JupyterLab to apply changes.
 */
export declare type Disable = boolean;
/**
 * LSP Completion settings.
 */
export interface CodeCompletion {
    showDocumentation?: ShowDocumentationBox;
    continuousHinting?: ContinuousHinting;
    suppressContinuousHintingIn?: SuppressInvokeContinuousHintingInSpecificCodeFragments;
    suppressTriggerCharacterIn?: SuppressInvokeViaTriggerCharacterInSpecificCodeFragments;
    kernelResponseTimeout?: KernelCompletionResponseTimeout;
    disableCompletionsFrom?: DisableCompletionsBySource;
    waitForBusyKernel?: WaitForKernelIfBusy;
    theme?: CompleterTheme2;
    kernelCompletionsFirst?: PrioritizeCompletionsFromKernel;
    caseSensitive?: CaseSensitiveFiltering;
    includePerfectMatches?: IncludePerfectMatches;
    preFilterMatches?: PreFilterMatches;
    labelExtra?: TextToDisplayNextToCompletionLabel;
    layout?: CompleterLayout;
    typesMap?: MappingOfCustomKernelTypesToValidCompletionKindNames;
    disable?: Disable;
    [k: string]: any;
}
/**
 * Mapping used for icon selection. The kernel types (keys) are case-insensitive. Accepted values are the names of CompletionItemKind and 'Kernel' literal. The defaults aim to provide good initial experience for Julia, Python and R kernels.
 */
export interface MappingOfCustomKernelTypesToValidCompletionKindNames {
    [k: string]: 'Kernel' | 'Text' | 'Method' | 'Function' | 'Constructor' | 'Field' | 'Variable' | 'Class' | 'Interface' | 'Module' | 'Property' | 'Unit' | 'Value' | 'Enum' | 'Keyword' | 'Snippet' | 'Color' | 'File' | 'Reference' | 'Folder' | 'EnumMember' | 'Constant' | 'Struct' | 'Event' | 'Operator' | 'TypeParameter';
}
