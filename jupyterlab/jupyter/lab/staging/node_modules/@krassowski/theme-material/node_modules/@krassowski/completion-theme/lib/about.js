import React from 'react';
import { COMPLETER_THEME_PREFIX } from './types';
function render_licence(licence) {
    return (React.createElement("div", { className: 'lsp-licence' },
        React.createElement("a", { href: licence.link, title: licence.name }, licence.abbreviation),
        ' ',
        licence.licensor));
}
function render_theme(trans, theme, get_set, is_current) {
    let icons = [];
    for (let [name, icon] of get_set(theme)) {
        icons.push(React.createElement("div", { className: 'lsp-completer-icon-row' },
            React.createElement("div", null, name),
            React.createElement("div", { className: 'jp-Completer-icon' },
                React.createElement(icon.react, null))));
    }
    return (React.createElement("div", { className: 'lsp-completer-themes ' + COMPLETER_THEME_PREFIX + theme.id },
        React.createElement("h4", null,
            theme.name,
            is_current ? trans.__(' (current)') : ''),
        React.createElement("ul", null,
            React.createElement("li", { key: 'id' },
                "ID: ",
                React.createElement("code", null, theme.id)),
            React.createElement("li", { key: 'licence' },
                trans.__('Licence: '),
                render_licence(theme.icons.licence)),
            React.createElement("li", { key: 'dark' }, typeof theme.icons.dark === 'undefined'
                ? ''
                : trans.__('Includes dedicated dark mode icons set'))),
        React.createElement("div", { className: 'lsp-completer-theme-icons' }, icons)));
}
export function render_themes_list(trans, props) {
    let themes = props.themes.map(theme => render_theme(trans, theme, props.get_set, theme == props.current));
    return React.createElement("div", null, themes);
}
//# sourceMappingURL=about.js.map