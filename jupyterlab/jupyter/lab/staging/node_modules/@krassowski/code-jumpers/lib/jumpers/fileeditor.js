import { JumpHistory } from '../history';
import { CodeJumper, jumpers } from './jumper';
export class FileEditorJumper extends CodeJumper {
    constructor(editor_widget, document_manager) {
        super();
        this.widget = editor_widget;
        this.document_manager = document_manager;
        this.editor = editor_widget.content;
        this.history = new JumpHistory(this.editor.model.modelDB);
    }
    get path() {
        return this.widget.context.path;
    }
    get editors() {
        return [this.editor.editor];
    }
    jump(jump_position) {
        let { token } = jump_position;
        // TODO: this is common
        // place cursor in the line with the definition
        let position = this.editor.editor.getPositionAt(token.offset);
        this.editor.editor.setSelection({ start: position, end: position });
        this.editor.editor.focus();
    }
    getOffset(position) {
        return this.editor.editor.getOffsetAt(position);
    }
    getJumpPosition(position) {
        return {
            token: {
                offset: this.getOffset(position),
                value: ''
            },
            index: 0
        };
    }
    getCurrentPosition() {
        let position = this.editor.editor.getCursorPosition();
        return {
            editor_index: 0,
            line: position.line,
            column: position.column,
            contents_path: this.editor.context.path,
            is_symlink: false
        };
    }
}
jumpers.set('fileeditor', FileEditorJumper);
//# sourceMappingURL=fileeditor.js.map