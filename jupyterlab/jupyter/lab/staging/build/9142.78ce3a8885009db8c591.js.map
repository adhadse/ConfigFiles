{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/@krassowski/code-jumpers/lib/history.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/code-jumpers/lib/jumpers/jumper.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/code-jumpers/lib/jumpers/fileeditor.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/code-jumpers/lib/notebook_private.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/code-jumpers/lib/jumpers/notebook.js"],"names":["DB_ENTRY","JumpHistory","constructor","model_db","this","ensure_history_is_ready","jump_history","undefined","has","get","createList","store","position","push","JSON","stringify","recollect","length","last_position","undo","parse","movement_keys","modifiers","system_keys","CodeJumper","go_to_position","document_widget","jumper","column","line_number","input_number","document_jumper","line","document_jumper_type","jumpers","document_manager","jump_position","getJumpPosition","jump","_global_jump","openOrReveal","contents_path","console","log","is_symlink","revealed","then","endsWith","editor_index","protectFromAccidentalEditing","catch","warn","editor_widget","editor","content","disposable","addKeydownHandler","event","indexOf","key","ctrlKey","dialog_promise","showDialog","title","body","buttons","Dialog","label","result","button","accept","dispose","global_jump_back","previous_position","history","global_jump","current_position","getCurrentPosition","Map","FileEditorJumper","super","widget","model","modelDB","context","path","token","getPositionAt","offset","setSelection","start","end","focus","getOffset","getOffsetAt","value","index","getCursorPosition","set","_ensureFocus","notebook","force","activeCell","mode","hasFocus","node","contains","document","activeElement","NotebookJumper","notebook_widget","widgets","map","cell","setTimeout","deselectAll","activeCellIndex","activeEditor","editors"],"mappings":"kOAAA,MAAMA,EAAW,gBACV,MAAMC,EACTC,YAAYC,GACRC,KAAKD,SAAWA,EAEpBE,0BACI,GAAID,KAAKE,eAAiBC,UAAW,CACjC,GAAIH,KAAKD,SAASK,IAAIR,GAAW,CAC7BI,KAAKE,aAAeF,KAAKD,SAASM,IAAIT,OAErC,CACDI,KAAKE,aAAeF,KAAKD,SAASO,WAAWV,KAIzDW,MAAMC,GACFR,KAAKC,0BACLD,KAAKE,aAAaO,KAAKC,KAAKC,UAAUH,IAE1CI,YACIZ,KAAKC,0BACL,GAAID,KAAKE,aAAaW,SAAW,EAAG,CAChC,OAEJ,IAAIC,EAAgBd,KAAKE,aAAaG,IAAIL,KAAKE,aAAaW,OAAS,GAErEb,KAAKE,aAAaa,OAClB,OAAOL,KAAKM,MAAMF,I,eC1B1B,MAAMG,EAAgB,CAClB,aACA,YACA,UACA,YACA,OACA,MACA,SACA,YAEJ,MAAMC,EAAY,CAAC,MAAO,WAAY,UAAW,SACjD,MAAMC,EAAc,CAChB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,eAEG,MAAMC,EACTC,eAAeC,EAAiBC,EAAQC,EAAQC,EAAaC,EAAe,GACxE,IAAIC,EACJ,IAAInB,EAAW,CAAEoB,KAAMH,EAAaD,OAAQA,GAC5C,IAAIK,EAAuBC,EAAQzB,IAAIkB,GACvCI,EAAkB,IAAIE,EAAqBP,EAAiBtB,KAAK+B,kBACjE,IAAIC,EAAgBL,EAAgBM,gBAAgBzB,EAAUkB,GAC9DC,EAAgBO,KAAKF,GAEzBG,aAAa3B,GACT,IAAIc,EAAkBtB,KAAK+B,iBAAiBK,aAAa5B,EAAS6B,eAClE,IAAKf,EAAiB,CAClBgB,QAAQC,IAAI,kCACZ,OAEJ,IAAIC,EAAahC,EAASgC,WAC1BlB,EAAgBmB,SACXC,MAAK,KACN1C,KAAKqB,eAAeC,EAAiBd,EAAS6B,cAAcM,SAAS,UAAY,WAAa,aAAcnC,EAASgB,OAAQhB,EAASoB,KAAMpB,EAASoC,cAErJ,GAAIJ,EAAY,CACZxC,KAAK6C,6BAA6BvB,OAGrCwB,MAAMR,QAAQS,MAEvBF,6BAA6BvB,GACzB,IAAI0B,EAAgB1B,EAIpB,IAAI2B,EAASD,EAAcE,QAAQD,OACnC,IAAIE,EAAaF,EAAOG,mBAAkB,CAACH,EAAQI,KAE/C,GAAIpC,EAAcqC,QAAQD,EAAME,QAAU,GACtCrC,EAAUoC,QAAQD,EAAME,QAAU,GAClCpC,EAAYmC,QAAQD,EAAME,QAAU,EAAG,CACvC,OAAO,MAIX,GAAIF,EAAME,MAAQ,KAAOF,EAAMG,QAAS,CACpC,OAAO,MAEX,IAAIC,GAAiB,IAAAC,YAAW,CAC5BC,MAAO,sBACPC,KAAM,+EACF,iCACJC,QAAS,CACL,EAAAC,OAAA,aAAoB,CAAEC,MAAO,WAC7B,EAAAD,OAAA,WAAkB,CAAEC,MAAO,mBAGnCN,EACKf,MAAKsB,IACN,GAAIA,EAAOC,OAAOC,OAAQ,CACtBf,EAAWgB,cAGdrB,MAAMR,QAAQS,MAEnB,OAAO,QAGfqB,mBACI,IAAIC,EAAoBrE,KAAKsE,QAAQ1D,YACrC,GAAIyD,EAAmB,CACnBrE,KAAKmC,aAAakC,IAG1BE,YAAY/D,GACR,MAAMgE,EAAmBxE,KAAKyE,qBAC9BzE,KAAKsE,QAAQ/D,MAAMiE,GACnBxE,KAAKmC,aAAa3B,IAGnB,IAAIsB,EAAU,IAAI4C,ICrGlB,MAAMC,UAAyBvD,EAClCtB,YAAYkD,EAAejB,GACvB6C,QACA5E,KAAK6E,OAAS7B,EACdhD,KAAK+B,iBAAmBA,EACxB/B,KAAKiD,OAASD,EAAcE,QAC5BlD,KAAKsE,QAAU,IAAIzE,EAAYG,KAAKiD,OAAO6B,MAAMC,SAErD,WACI,OAAO/E,KAAK6E,OAAOG,QAAQC,KAE/B,cACI,MAAO,CAACjF,KAAKiD,OAAOA,QAExBf,KAAKF,GACD,IAAI,MAAEkD,GAAUlD,EAGhB,IAAIxB,EAAWR,KAAKiD,OAAOA,OAAOkC,cAAcD,EAAME,QACtDpF,KAAKiD,OAAOA,OAAOoC,aAAa,CAAEC,MAAO9E,EAAU+E,IAAK/E,IACxDR,KAAKiD,OAAOA,OAAOuC,QAEvBC,UAAUjF,GACN,OAAOR,KAAKiD,OAAOA,OAAOyC,YAAYlF,GAE1CyB,gBAAgBzB,GACZ,MAAO,CACH0E,MAAO,CACHE,OAAQpF,KAAKyF,UAAUjF,GACvBmF,MAAO,IAEXC,MAAO,GAGfnB,qBACI,IAAIjE,EAAWR,KAAKiD,OAAOA,OAAO4C,oBAClC,MAAO,CACHjD,aAAc,EACdhB,KAAMpB,EAASoB,KACfJ,OAAQhB,EAASgB,OACjBa,cAAerC,KAAKiD,OAAO+B,QAAQC,KACnCzC,WAAY,QAIxBV,EAAQgE,IAAI,aAAcnB,GC1C1B,SAASoB,EAAaC,EAAUC,EAAQ,OACpC,IAAIC,EAAaF,EAASE,WAC1B,GAAIF,EAASG,OAAS,QAAUD,EAAY,CACxC,IAAKA,EAAWjD,OAAOmD,WAAY,CAC/BF,EAAWjD,OAAOuC,SAG1B,GAAIS,IAAUD,EAASK,KAAKC,SAASC,SAASC,eAAgB,CAC1DR,EAASK,KAAKb,SCVf,MAAMiB,UAAuBrF,EAChCtB,YAAY4G,EAAiB3E,GACzB6C,QACA5E,KAAK6E,OAAS6B,EACd1G,KAAKgG,SAAWU,EAAgBxD,QAChClD,KAAKsE,QAAU,IAAIzE,EAAYG,KAAKgG,SAASlB,MAAMC,SACnD/E,KAAK+B,iBAAmBA,EAE5B,cACI,OAAO/B,KAAKgG,SAASW,QAAQC,KAAIC,GAAQA,EAAK5D,SAElDf,KAAK1B,GACD,IAAI,MAAE0E,EAAK,MAAEU,GAAUpF,EAEvBsG,YAAW,KACP9G,KAAKgG,SAASe,cACd/G,KAAKgG,SAASgB,gBAAkBpB,EAChCG,EAAa/F,KAAKgG,UAClBhG,KAAKgG,SAASG,KAAO,OAErB,IAAIc,EAAejH,KAAKgG,SAASE,WAAWjD,OAE5C,IAAIzC,EAAWyG,EAAa9B,cAAcD,EAAME,QAChD6B,EAAa5B,aAAa,CAAEC,MAAO9E,EAAU+E,IAAK/E,MACnD,GAEPiF,UAAUjF,EAAUqG,EAAO,GACvB,OAAO7G,KAAKkH,QAAQL,GAAMnB,YAAYlF,GAE1CiE,qBACI,IAAIjE,EAAWR,KAAKkH,QAAQlH,KAAKgG,SAASgB,iBAAiBnB,oBAC3D,MAAO,CACHjD,aAAc5C,KAAKgG,SAASgB,gBAC5BpF,KAAMpB,EAASoB,KACfJ,OAAQhB,EAASgB,OACjBa,cAAerC,KAAK6E,OAAOG,QAAQC,KACnCzC,WAAY,OAGpBP,gBAAgBzB,EAAUkB,GACtB,MAAO,CACHwD,MAAO,CACHE,OAAQpF,KAAKyF,UAAUjF,EAAUkB,GACjCiE,MAAO,IAEXC,MAAOlE,IAInBI,EAAQgE,IAAI,WAAYW","file":"9142.78ce3a8885009db8c591.js?v=78ce3a8885009db8c591","sourcesContent":["const DB_ENTRY = 'jumpy_history';\nexport class JumpHistory {\n    constructor(model_db) {\n        this.model_db = model_db;\n    }\n    ensure_history_is_ready() {\n        if (this.jump_history === undefined) {\n            if (this.model_db.has(DB_ENTRY)) {\n                this.jump_history = this.model_db.get(DB_ENTRY);\n            }\n            else {\n                this.jump_history = this.model_db.createList(DB_ENTRY);\n            }\n        }\n    }\n    store(position) {\n        this.ensure_history_is_ready();\n        this.jump_history.push(JSON.stringify(position));\n    }\n    recollect() {\n        this.ensure_history_is_ready();\n        if (this.jump_history.length === 0) {\n            return;\n        }\n        let last_position = this.jump_history.get(this.jump_history.length - 1);\n        // being lazy here - undo addition instead of removal ;)\n        this.jump_history.undo();\n        return JSON.parse(last_position);\n    }\n}\n//# sourceMappingURL=history.js.map","import { Dialog, showDialog } from '@jupyterlab/apputils';\nconst movement_keys = [\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowUp',\n    'ArrowDown',\n    'Home',\n    'End',\n    'PageUp',\n    'PageDown'\n];\nconst modifiers = ['Alt', 'AltGraph', 'Control', 'Shift'];\nconst system_keys = [\n    'F1',\n    'F2',\n    'F3',\n    'F4',\n    'F5',\n    'F6',\n    'F7',\n    'F8',\n    'F9',\n    'F10',\n    'F11',\n    'F12',\n    'ContextMenu'\n];\nexport class CodeJumper {\n    go_to_position(document_widget, jumper, column, line_number, input_number = 0) {\n        let document_jumper;\n        let position = { line: line_number, column: column };\n        let document_jumper_type = jumpers.get(jumper);\n        document_jumper = new document_jumper_type(document_widget, this.document_manager);\n        let jump_position = document_jumper.getJumpPosition(position, input_number);\n        document_jumper.jump(jump_position);\n    }\n    _global_jump(position) {\n        let document_widget = this.document_manager.openOrReveal(position.contents_path);\n        if (!document_widget) {\n            console.log('Widget failed to open for jump');\n            return;\n        }\n        let is_symlink = position.is_symlink;\n        document_widget.revealed\n            .then(() => {\n            this.go_to_position(document_widget, position.contents_path.endsWith('.ipynb') ? 'notebook' : 'fileeditor', position.column, position.line, position.editor_index);\n            // protect external files from accidental edition\n            if (is_symlink) {\n                this.protectFromAccidentalEditing(document_widget);\n            }\n        })\n            .catch(console.warn);\n    }\n    protectFromAccidentalEditing(document_widget) {\n        let editor_widget = document_widget;\n        // We used to adjust `editor_widget.title.label` here but an upstream\n        // bug (https://github.com/jupyterlab/jupyterlab/issues/10856) prevents\n        // us from doing so anymore.\n        let editor = editor_widget.content.editor;\n        let disposable = editor.addKeydownHandler((editor, event) => {\n            // allow to move around, select text and use modifiers & browser keys freely\n            if (movement_keys.indexOf(event.key) !== -1 ||\n                modifiers.indexOf(event.key) !== -1 ||\n                system_keys.indexOf(event.key) !== -1) {\n                return false;\n            }\n            // allow to copy text (here assuming that, as on majority of OSs, copy is associated with ctrl+c)\n            // this is not foolproof, but should work in majority of sane settings (unfortunately, not in vim)\n            if (event.key === 'c' && event.ctrlKey) {\n                return false;\n            }\n            let dialog_promise = showDialog({\n                title: 'Edit external file?',\n                body: 'This file is located outside of the root of the JupyterLab start directory. ' +\n                    'do you really wish to edit it?',\n                buttons: [\n                    Dialog.cancelButton({ label: 'Cancel' }),\n                    Dialog.warnButton({ label: 'Edit anyway' })\n                ]\n            });\n            dialog_promise\n                .then(result => {\n                if (result.button.accept) {\n                    disposable.dispose();\n                }\n            })\n                .catch(console.warn);\n            // prevent default\n            return true;\n        });\n    }\n    global_jump_back() {\n        let previous_position = this.history.recollect();\n        if (previous_position) {\n            this._global_jump(previous_position);\n        }\n    }\n    global_jump(position) {\n        const current_position = this.getCurrentPosition();\n        this.history.store(current_position);\n        this._global_jump(position);\n    }\n}\nexport let jumpers = new Map();\n//# sourceMappingURL=jumper.js.map","import { JumpHistory } from '../history';\nimport { CodeJumper, jumpers } from './jumper';\nexport class FileEditorJumper extends CodeJumper {\n    constructor(editor_widget, document_manager) {\n        super();\n        this.widget = editor_widget;\n        this.document_manager = document_manager;\n        this.editor = editor_widget.content;\n        this.history = new JumpHistory(this.editor.model.modelDB);\n    }\n    get path() {\n        return this.widget.context.path;\n    }\n    get editors() {\n        return [this.editor.editor];\n    }\n    jump(jump_position) {\n        let { token } = jump_position;\n        // TODO: this is common\n        // place cursor in the line with the definition\n        let position = this.editor.editor.getPositionAt(token.offset);\n        this.editor.editor.setSelection({ start: position, end: position });\n        this.editor.editor.focus();\n    }\n    getOffset(position) {\n        return this.editor.editor.getOffsetAt(position);\n    }\n    getJumpPosition(position) {\n        return {\n            token: {\n                offset: this.getOffset(position),\n                value: ''\n            },\n            index: 0\n        };\n    }\n    getCurrentPosition() {\n        let position = this.editor.editor.getCursorPosition();\n        return {\n            editor_index: 0,\n            line: position.line,\n            column: position.column,\n            contents_path: this.editor.context.path,\n            is_symlink: false\n        };\n    }\n}\njumpers.set('fileeditor', FileEditorJumper);\n//# sourceMappingURL=fileeditor.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Ensure that the notebook has proper focus.\n */\nfunction _ensureFocus(notebook, force = false) {\n    let activeCell = notebook.activeCell;\n    if (notebook.mode === 'edit' && activeCell) {\n        if (!activeCell.editor.hasFocus()) {\n            activeCell.editor.focus();\n        }\n    }\n    if (force && !notebook.node.contains(document.activeElement)) {\n        notebook.node.focus();\n    }\n}\nexport { _ensureFocus };\n//# sourceMappingURL=notebook_private.js.map","import { JumpHistory } from '../history';\nimport { _ensureFocus } from '../notebook_private';\nimport { CodeJumper, jumpers } from './jumper';\nexport class NotebookJumper extends CodeJumper {\n    constructor(notebook_widget, document_manager) {\n        super();\n        this.widget = notebook_widget;\n        this.notebook = notebook_widget.content;\n        this.history = new JumpHistory(this.notebook.model.modelDB);\n        this.document_manager = document_manager;\n    }\n    get editors() {\n        return this.notebook.widgets.map(cell => cell.editor);\n    }\n    jump(position) {\n        let { token, index } = position;\n        // Prevents event propagation issues\n        setTimeout(() => {\n            this.notebook.deselectAll();\n            this.notebook.activeCellIndex = index;\n            _ensureFocus(this.notebook);\n            this.notebook.mode = 'edit';\n            // find out offset for the element\n            let activeEditor = this.notebook.activeCell.editor;\n            // place cursor in the line with the definition\n            let position = activeEditor.getPositionAt(token.offset);\n            activeEditor.setSelection({ start: position, end: position });\n        }, 0);\n    }\n    getOffset(position, cell = 0) {\n        return this.editors[cell].getOffsetAt(position);\n    }\n    getCurrentPosition() {\n        let position = this.editors[this.notebook.activeCellIndex].getCursorPosition();\n        return {\n            editor_index: this.notebook.activeCellIndex,\n            line: position.line,\n            column: position.column,\n            contents_path: this.widget.context.path,\n            is_symlink: false\n        };\n    }\n    getJumpPosition(position, input_number) {\n        return {\n            token: {\n                offset: this.getOffset(position, input_number),\n                value: ''\n            },\n            index: input_number\n        };\n    }\n}\njumpers.set('notebook', NotebookJumper);\n//# sourceMappingURL=notebook.js.map"],"sourceRoot":""}