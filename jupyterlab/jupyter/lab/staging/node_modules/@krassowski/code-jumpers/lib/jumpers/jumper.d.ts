import { CodeEditor } from '@jupyterlab/codeeditor';
import { IDocumentManager } from '@jupyterlab/docmanager';
import { IDocumentWidget } from '@jupyterlab/docregistry';
import { JumpHistory } from '../history';
import { IGlobalPosition, ILocalPosition } from '../positions';
export declare abstract class CodeJumper {
    document_manager: IDocumentManager;
    widget: IDocumentWidget;
    history: JumpHistory;
    abstract get editors(): ReadonlyArray<CodeEditor.IEditor>;
    private go_to_position;
    private _global_jump;
    private protectFromAccidentalEditing;
    protected abstract jump(position: ILocalPosition): void;
    global_jump_back(): void;
    global_jump(position: IGlobalPosition): void;
    abstract getCurrentPosition(): IGlobalPosition;
    abstract getOffset(position: CodeEditor.IPosition, cell?: number): number;
    abstract getJumpPosition(position: CodeEditor.IPosition, input_number?: number): ILocalPosition;
}
export declare let jumpers: Map<string, any>;
